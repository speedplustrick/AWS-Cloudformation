Description: Creates an S3 bucket configured for hosting a static website and add it to cloudfront. Creates an S3 bucket configured for hosting a static website and add it to cloudfront. Dunamic bucket name, 
S3 Public Access Block, S3 encryption enabled, SSL Policy added. 

### Parameters
Parameters:
  pSiteName:
    Description: 'The list of sites to deploy'
    Type: CommaDelimitedList
  pACMCertificateArn:
    Description: 'Arn of the ACM Certificate to deploy on CloudFront (US-EAST-1 only)'
    Type: String
  pCloudFrontPriceClass:
    Description: 'Price class of the CloudFront distribution'
    Type: String
    Default: 'PriceClass_All'
    AllowedValues:
      - 'PriceClass_All'
      - 'PriceClass_200'
      - 'PriceClass_100'


Resources:
  ##Bucket##
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: 'true'
        BlockPublicPolicy: 'true'
        IgnorePublicAcls: 'true'
        RestrictPublicBuckets: 'true' 
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  ##BucketPolicy##      
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: 
      - WebsiteBucket
    Properties:
      Bucket:
        !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
            - !Sub 'arn:aws:s3:::${WebsiteBucket}'
            - !Sub 'arn:aws:s3:::${WebsiteBucket}/*'
          Condition: 
            Bool:
              aws:SecureTransport: 'false'


  ##CFrontOriginAccessIdentity##              
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref WebsiteBucket

  ##CloudFront##
  WebsiteCloudFront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
    - WebsiteBucket
    Properties:
      DistributionConfig:
        Aliases: !Ref pSiteName
        Origins:
        - DomainName:
            Fn::GetAtt:
            - WebsiteBucket
            - RegionalDomainName
          Id:
            !Ref WebsiteBucket
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
            OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref CloudFrontOAI]]
        Enabled: 'true'
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId:
            !Ref WebsiteBucket
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: false
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: all
            Headers:
            - Access-Control-Request-Headers
            - Access-Control-Request-Method
            - Origin
        PriceClass: !Ref pCloudFrontPriceClass
        ViewerCertificate:
          AcmCertificateArn: !Ref pACMCertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only
        CustomErrorResponses:
        - ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: "/index.html"
        - ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: "/index.html"       
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties: 
      CloudFrontOriginAccessIdentityConfig: 
        Comment: !Join ["", ["CloudFront-OAI-", !Select [0, !Ref pSiteName]]]          